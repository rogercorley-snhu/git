
/* =====================================================================================
 ---[ TITLE ]---  GEMPAY MANUAL PAYMENT BATCH QUERY - TEMPLATE
========================================================================================

---[ AUTHOR   ]---  Roger Corley
---[ CREATED  ]---  October  16, 2015

========================================================================================
---[ DESCRIPTION ]---   Set of SQL queries created to completed the following tasks:
========================================================================================


1.) Allows the technician to set a payment transaction date with @tdate.

----------------------------------------------------------------------------------------

2.) Use @tdate to determine Cycle BeginDate and EndDate.

----------------------------------------------------------------------------------------

3.) Assign BeginDate = @bdate and EndDate = @edate.

----------------------------------------------------------------------------------------

4.) Use dates and following filters to caclulate all transactions for an account.
    a.) @payid  = Payment TransID - Must align with @ctid(s)
    b.) @ctid   = Charge TransID that are found in tblDetail.
    c.) @acid     = AccountClassID(s) for the accounts to be searched.

----------------------------------------------------------------------------------------

5.) INSERTS results INTO a temporary table named PAYMENTS with @badge NULL.

----------------------------------------------------------------------------------------

6.) Second query matches all AccountNo(s) with corresponding BadgeNo(s) and
  then SETS corresponding row in PAYMENTS with the correct BadgeNo.

----------------------------------------------------------------------------------------

7.) Create a new GEMpay Payments Batch

----------------------------------------------------------------------------------------


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


----------------------------------------------------------------------------------------
========================================================================================
              ---[[[    SQL QUERY  CONFIGURATIONS    ]]]---
========================================================================================
---------------------------------------------------------------------------------------- */


USE [GEMdb];
GO


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


---[ BEGIN ]--- [ DECLARE QUERY VARIABLES ]
----------------------------------------------------------------------------------------

========================================================================================
              ---[[[ DO NOT MODIFY DECLARE STATEMENTS ]]]---
======================================================================================== */


DECLARE   @tdate datetime, @bdate datetime, @edate datetime;
DECLARE   @dateAdj int, @cid int, @outno int, @payid int;
DECLARE   @bid char(10), @refnum char(6), @chknum char(6);
DECLARE   @acid varchar(50), @ctid varchar(50);
DECLARE   @badge char(19);


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


---[ BEGIN ]--- [ SET  PAYMENT TRANSDATE ]
----------------------------------------------------------------------------------------

========================================================================================
              ---[[[ VARIABLE  @dateAdj   ]]]---
======================================================================================== */

SET   @dateAdj = 1;

----------------------------------------------------------------------------------------
--  The variable stores the number used to subtract
--  from the current date found with the GETDATE() function
--  to obtain a datetime used to determine the BeginDate and
--  EndDate of the PayPeriod Cycle desired.
--
--  e.g. -- To find the BeginDate and EndDate for the previous period,
--  enter the number 16. This will find the datetime 16 days from the
--  current datetime and use it to identify the Begindate and Enddate
--  in tblCycleXlat for date calculations.



/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


---[ BEGIN ]--- [ CONFIGURE QUERY VARIABLES ]
----------------------------------------------------------------------------------------

========================================================================================
          ---[[[[ MATCH THESE VARIABLES TO THOSE USED FOR PAYMENTS ]]]---
======================================================================================== */


SET @outno    = 1000;
----------------------------------------------------------------------------------------
-- Variable used to set the OutletNo for Payments.
-- MODIFY ONLY IF REQUIRED.
----------------------------------------------------------------------------------------

SET @payid    = 501;
----------------------------------------------------------------------------------------
-- Variiable used to set the Payment TransID for this query.
-- This value MUST MATCH THE CORRECT
-- Payment TransID for any charge TransID(s)
-- listed in the WHERE clause. ( e.g. '501' <--> '10' )
----------------------------------------------------------------------------------------

SET @refnum   = 'AUTO';
----------------------------------------------------------------------------------------
--  Enclose with single quotes ('').
--  MODIFY ONLY IF REQUIRED.
----------------------------------------------------------------------------------------

SET @chknum   = 'BIWK';
----------------------------------------------------------------------------------------
--  Variable used to find the correct xlatID in tblCycleXlat
--  This in BeginDate and EndDate calculations to determine
--  the correct Cycle ( PayPeriod ).
--  Enclose with single quotes ('').
--  This value MUST MATCH THE CORRECT XLATID
--  for this payment type.  ( e.g. 'BIWK'; 'BIWK2'; 'MTH' )
----------------------------------------------------------------------------------------

SET @ctid   = ',1,2,3,4,';
----------------------------------------------------------------------------------------
--  Variable to filter on TransIDs from tblDetail.
--  Enclose with single quotes ('').
--  MUST BEGIN AND END with commas (,1,2,3,)
----------------------------------------------------------------------------------------

SET @acid   = ',10,';
----------------------------------------------------------------------------------------
--  Variable used to filter on AccountClassIDs in tblDetail
--  Enclose with single quotes ('').
--  MUST BEGIN AND END with commas (,10,20,30,)
----------------------------------------------------------------------------------------



/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
========================================================================================
          ---[[[    DO NOT MODIFY ANYTHING PAST THIS SECTION    ]]]---
========================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



---[ BEGIN ]---   [ CHECK TABLE PAYMENTS ]
----------------------------------------------------------------------------------------

========================================================================================
          ---[[[ IF PAYMENTS EXISTS, DROP PAYMENTS TABLE ]]]---
          ---[[[ DO NOT MODIFY CHECK  STATEMENTS ]]]---
======================================================================================== */


IF OBJECT_ID(N'GEMdb..PAYMENTS') IS NOT NULL
  BEGIN
    PRINT 'PAYMENTS exists'
    DROP TABLE PAYMENTS
    PRINT 'PAYMENTS table dropped.'
  END
ELSE
  BEGIN
    PRINT 'PAYMENTS does not exist'
    PRINT 'Beginning Payments Script'
  END




---[ SCRIPT CONSTANTS ]---
----------------------------------------------------------------------------------------

/* =====================================================================================
            ---[[[ DO NOT MODIFY CONSTANTS ]]]---
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

SET @tdate    = LEFT(CONVERT(nvarchar, DATEADD(DAY, -@dateAdj, GETDATE()), 120), 11) + N'23:59:59';

----------------------------------------------------------------------------------------

SET @bdate    = (SELECT BeginDate FROM tblCycleXlat AS xlat
          WHERE @tdate BETWEEN xlat.BeginDate AND xlat.EndDate AND xlat.xlatID = @chknum);
----------------------------------------------------------------------------------------

SET @edate    = (SELECT EndDate FROM tblCycleXlat AS xlat
          WHERE @tdate BETWEEN xlat.BeginDate AND xlat.EndDate AND xlat.xlatID = @chknum);
----------------------------------------------------------------------------------------

SET @bid    = 'Payments';
----------------------------------------------------------------------------------------

SET @cid    = 1;
----------------------------------------------------------------------------------------

SET @badge    = NULL;
----------------------------------------------------------------------------------------


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
========================================================================================
                ---[[[ BEGIN SQL QUERY ]]]---
========================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


SELECT
----------------------------------------------------------------------------------------
   @bid       AS [BatchID]
  ,@cid       AS [CoreID]
  ,ohd.AccountNo  AS [AccountNo]
  ,@tdate     AS [TransDate]
  ,@outno     AS [OutletNo]
  ,@payid     AS [TransID]
  ,@refnum      AS [RefNum]
  ,@chknum      AS [ChkNum]


  ,CASE WHEN SUM(dtl.TransTotal) < 0 THEN 0 ELSE SUM(dtl.TransTotal) END AS [TransTotal]
  ,CASE WHEN SUM(dtl.TransTotal) < 0 THEN 0 ELSE SUM(dtl.TransTotal) END AS [Sales1]

  ,@badge     AS [BadgeNo]


INTO        PAYMENTS
----------------------------------------------------------------------------------------


FROM
----------------------------------------------------------------------------------------
  tblDetail     AS dtl
  LEFT JOIN tblAccountOHD   AS ohd ON dtl.AccountNo = ohd.AccountNo



WHERE
----------------------------------------------------------------------------------------
  CHARINDEX(','+CAST(dtl.TransID as VARCHAR(50))+',',@ctid) > 0
  AND CHARINDEX(','+CAST(ohd.AccountClassID AS VARCHAR(50))+',',@acid) > 0
  AND dtl.TransDate BETWEEN @bdate AND @edate



GROUP BY
----------------------------------------------------------------------------------------
  ohd.AccountNo



HAVING
----------------------------------------------------------------------------------------
  SUM(dtl.TransTotal) <> 0



ORDER BY
----------------------------------------------------------------------------------------
  dbo.LPad(RTRIM(ohd.AccountNo),19,'0')



/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


========================================================================================
---[ BEGIN ]--- [ Insert BadgeNo INTO PAYMENTS Temporary Table ]
======================================================================================== */

USE [GEMdb];
GO

----------------------------------------------------------------------------------------
UPDATE          dbo.PAYMENTS
SET           BadgeNo = d.BadgeNo

----------------------------------------------------------------------------------------

FROM
----------------------------------------------------------------------------------------
  (SELECT
            a.AccountNo, b.BadgeNo

  FROM tblAccountOHD  AS a
  join tblBadgesOHD AS b ON a.AccountNo = b.AccountNo) AS d, PAYMENTS AS c

----------------------------------------------------------------------------------------

WHERE
----------------------------------------------------------------------------------------
  c.AccountNo = d.AccountNo

----------------------------------------------------------------------------------------


GO


/* =====================================================================================
---[ END ]--- [ Insert BadgeNo INTO PAYMENTS Temporary Table ]
======================================================================================== */



/* =====================================================================================
---[ END ]--- [   PAYMENTS BATCH QUERY    ]
========================================================================================

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */




/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




========================================================================================
---[ BEGIN ]--- [ Insert PAYMENTS Into tblBatch ]
======================================================================================== */


USE [GEMdb];
GO

IF OBJECT_ID(N'GEMdb..PAYMENTS') IS NULL
  BEGIN
    PRINT '[ ERROR ] : The temporary table PAYMENTS does not exist.'
  END
ELSE
  BEGIN
    PRINT '[ IMPORT ] : The temporary table PAYMENTS exists.'
    PRINT '[ IMPORT ] : Importing table data from PAYMENTS tables INTO tblBatch.'


    INSERT INTO tblBatch ( BatchID, CoreID, AccountNo, TransDate, OutletNo, TransID, RefNum, ChkNum, TransTotal, Sales1, BadgeNo )

    SELECT  BatchID, CoreID, AccountNo, TransDate, OutletNo, TransID, RefNum, ChkNum, TransTotal, Sales1, BadgeNo
    FROM  PAYMENTS

    END

GO

/* =====================================================================================
---[ END ]--- [   Insert PAYMENTS Into tblBatch ]
========================================================================================

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */

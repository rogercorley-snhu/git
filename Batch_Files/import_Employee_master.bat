  @echo off
  cls
  setlocal ENABLEDELAYEDEXPANSION


::-------------------------------------------------------------------------------------------------------
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
::
::                  [ ****      DO NOT MODIFY IN THIS SECTION         ****  ]
::
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
::-------------------------------------------------------------------------------------------------------
::
::
::=======================================================================================================
::                  [ ****       DATE CONSTANTS : DO NOT MODIFY       ****  ]
::=======================================================================================================

  for /f "delims=" %%a in ('wmic OS Get localdatetime  ^| find "."') do set "dt=%%a"

  set "YYYY=%dt:~0,4%"
  set "MM=%dt:~4,2%"
  set "DD=%dt:~6,2%"
  set "HH=%dt:~8,2%"
  set "Min=%dt:~10,2%"
  set "Sec=%dt:~12,2%"

  set "datestamp=%YYYY%/%MM%/%DD%"
  set "timestamp=%HH%:%Min%:%Sec%"
  set "fullstamp=%datestamp% %timestamp%"
  set "logstamp=%YYYY%-%MM%-%DD%"

::=======================================================================================================
::=======================================================================================================
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
::
::
::=======================================================================================================
::  ENVIRONMENT VARIABLES : Directories 
::=======================================================================================================
::  VERIFY all required Environment Variables have been created in System Properties
::  -- To verify, right-click 'My Computer', click 'Properties', select 'Advanced' tab ...
::  -- and click 'Environment Variables'. If they exist, you will see them in 'User variables for'.
::
::  IF ENVIRONMENT VARIABLES FOR GEM DON'T EXIST...
::  -- Run the command listed below in a Windows Command Line window.
::  -- READ THE INSTRUCTIONS BEFORE ATTEMPTING.
::
::
::-------------------------------------------------------------------------------------------------------
::  TO CREATE WINDOWS ENVIRONMENT VARIABLE : GEM DIRECTORY
::-------------------------------------------------------------------------------------------------------
::  -- Open a Windows Command Line and enter  the following command:
::.................................................................................................................................
::  ** ONLY CHANGE THE DRIVE LETTER THAT THE GEM DIRECTORY 
::  ** IS LOCATED! Make sure to enclose the path in double-quotes ( "X:\GEM" )
::.................................................................................................................................
::  ** DO NOT INCLUDE A TRAILING SLASH AFTER "GEM"!
::-------------------------------------------------------------------------------------------------------
::  
::  ** Change Drive Letter If Required:
::  --  ( e.g. C:\GEM or E:\GEM )
::----------------------------------------------------
::  setx GEM "D:\GEM"
::
::
::  -- After the Environment Variable is set, close the current Command Line
::  -- window, open a new Command Line and verity the variable exists by
:: -- by running the following echo command: 
::-------------------------------------------------------------------------------------------------------
::  
::  echo %GEM%
::
::-------------------------------------------------------------------------------------------------------
::  SCRIPT ENVIRONMENT VARIABLES  
::-------------------------------------------------------------------------------------------------------
::  --  You may now reference the %GEM% environment variable in this script.
::  --  Only use the %...% variable. Anything past the last % is just a reference to the directory.
::
::  **  Be sure to enclose variable name AND path in double-quotes ( set "x=ab\cdpath" )
::
::  **  MODIFY THESE VARIABLES ONLY IF NECESSARY!! 
::
::  **  DO NOT USE A TRAILING SLASH ( \ ) AFTER THE LAST SUB-DIRECTORY.
::  **  VERIFY THAT ALL SUB-DIRECTORIES EXIST. CREATE IF NECESSARY.
::-------------------------------------------------------------------------------------------------------
::
    set "gimp=%GEM%\ImportExport"
    set "garch=%GEM%\ImportExport\Archive\"
    set "gemp=%GEM%\ImportExport\Archive\ImportEmployees\"
    set "gbadf=%GEM%\ImportExport\Archive\ImportEmployees\BadFiles"
::
::  
::=======================================================================================================
::  /ENVIRONMENT VARIABLES : Directories
::=======================================================================================================
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
::
::
::-------------------------------------------------------------------------------------------------------
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
::
::                  [ ****       END DO NOT MODIFY SECTION            ****  ]
::
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
::-------------------------------------------------------------------------------------------------------



::-------------------------------------------------------------------------------------------------------
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
::
::                  [ ****  MODIFY VARIABLE VALUES AS NEEDED          ****  ]
::                  [ ****  READ ALL INSTRUCTIONS BEFORE MODIFYING    ****  ]
::                  [ ****  DO NOT REORDER VARIABLE POSITIONS         ****  ]
::
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
::-------------------------------------------------------------------------------------------------------
::
::
::=======================================================================================================
::  CONFIGURE VARIABLES : ENVIRONMENT : Filenames
::=======================================================================================================

::  ** 'fileType' MUST match the demographic import file type. 
::  ** ONLY modify the Extension Type for 'fileType'! DO NOT MODIFY VARIABLE NAME!
::
::  **  'tempType' is a constant used in funcRemoveHeader. DO NOT MODIFY.
::  -------------------------------------------------------------------------------------
  set "fileType=txt"  
::
  set "tempType=tmp"


::  'impFile' MUST match the demographic file name WITHOUT file extension.  
::
::  'impFull' is the full filename of 'impFile' WITH file extension. DO NOT MODIFY
::  -------------------------------------------------------------------------------------
  set "impFile=employee"    
::
  set "impFull=%impFile%.%fileType%"


::  'impPath' is the full path and file name of the demographic file WITH file extension. 
::  'tempPath' is the full path-filename of the temporary file created in funcRemoveHeader
::  -------------------------------------------------------------------------------------
  set "impPath=%gimp%\%impFile%.%fileType%"
::
  set "tempPath=%gimp%\%impFile%.%tempType%"
::
::
::  'archFull' is the variable for the full archive file name WITHOUT file extension.
::  'archPath' is the variable for the full path-filename of 'archFull' WITHOUT file extension 
::  -------------------------------------------------------------------------------------
  set "archFull=%impFile%.%logstamp%"
::
  set "archPath=%gemp%\%archFull%"
  ::
  set "log=%gemp%_%impFile%.log01"

::  'badFull' is the variable for the full corrupt file name WITHOUT file extension.
::  'badPath' is the variable for the full path-filename of 'badFull' WITHOUT file extension 
::  -------------------------------------------------------------------------------------
  set "badFull=bad.%impFile%.%logstamp%"
::
  set "badPath=%gbadf%\%badFull%"
  set "badlog=%gbadf%\_%impFile%.log01"

::  Set 'exp_num_lines' value to the minimum number of expected lines in the demographic file.
::  -------------------------------------------------------------------------------------
  set "exp_num_lines=10"

::=======================================================================================================
::  /CONFIGURE VARIABLES : ENVIRONMENT : Filenames
::=======================================================================================================
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


::=======================================================================================================
::  CONFIGURE VARIABLES : SQL SERVER : IMPORT SCRIPT 
::=======================================================================================================

::  MUST match sModule in SQL table cfgScriptParams
::  -------------------------------------------------------------------------------------
  set "module=171"
    
::  "SQLNAME=sqlservername" MUST be enclosed wihtin double-quotes ( "SQLNAME=xxxxx" )
::  -------------------------------------------------------------------------------------
::  !! If using local for SQL Server name, set variable to "SQLNAME=(local)" - Parenthesis are REQUIRED !!
::-------------------------------------------------------------------------------------------------------
  set "sqlname=d109gemdb"

::=======================================================================================================
::  /CONFIGURE VARIABLES : SQL SERVER : IMPORT SCRIPT 
::=======================================================================================================
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



::-------------------------------------------------------------------------------------------------------
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
::
::                  [ ****  DO NOT MODIFY ANYTHING PAST THIS SECTION  ****  ]
::
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
::-------------------------------------------------------------------------------------------------------
::
::
::=======================================================================================================
::  BEGIN BATCH TASKS
::=======================================================================================================
::
::
::=======================================================================================================
:Begin_Import_Job
::=======================================================================================================
    echo ============================================================================== >> %log%
    echo %fullstamp% : [ BEGIN ] Importing %impFull% >> %log%
    echo ============================================================================== >> %log%
    echo. >> %log%
    echo .............................................................................. >> %log%
    echo .............................................................................. >> %log%
    echo. >> %log%


::=======================================================================================================
:testImportFileExists
::=======================================================================================================
    echo ============================================================================== >> %log%
    echo %fullstamp% : [ CHECK ] BEGIN FUNCTION: CHECK FILES EXISTS >> %log%
    echo ============================================================================== >> %log%
    echo. >> %log%

  if exist %impPath% (
    echo !fullstamp! : [ CHECK ] : '!impFull!' found. >> !log!
    echo. >> !log!
    echo ============================================================================== >> !log!
    echo !fullstamp! : [ CHECK ] : CLOSE FUNCTION: CHECK FILES EXISTS  >> !log!
    echo ============================================================================== >> !log!
    echo. >> !log!
    echo .............................................................................. >> !log!
    echo .............................................................................. >> !log!
    echo. >> !log!
    goto funcRemoveHeader 
    ) else (
    echo ============================================================================== >> !log!
    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ >> !log!
    echo !fullstamp! : [ CHECK : ERROR ] : '!impFull!' NOT FOUND >> !log! 
    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ >> !log!
    echo ============================================================================== >> !log!
    echo. >> !log!
    )
  
  goto Done

::=======================================================================================================
::  /CHK_ImportFileExist
::=======================================================================================================
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


::=======================================================================================================
:funcRemoveHeader
::=======================================================================================================

    echo ============================================================================== >> %log%
    echo %fullstamp% : [ HEADER ] BEGIN FUNCTION: REMOVE HEADER >> %log%
    echo ============================================================================== >> %log%
    echo. >> %log%

  for /f "skip=1 delims=*" %%a in (%impPath%) do (
    echo %%a >> %tempPath%    
  )

  xcopy %tempPath% %impPath% /y
  del %tempPath% /f /q

    echo. >> %log%
    echo %fullstamp% : [ HEADER ] Header row removed from %impFull%. >> %log%
    echo. >> %log%

    echo ============================================================================== >> %log%
    echo %fullstamp% : [ HEADER ] END FUNCTION: REMOVE HEADER >> %log%
    echo ============================================================================== >> %log%
    echo. >> %log%

goto funcLineCount

::=======================================================================================================
::  /funcRemoveHeader
::=======================================================================================================
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



::=======================================================================================================
:funcLineCount
::=======================================================================================================

    echo ============================================================================== >> %log%
    echo %fullstamp% : [ COUNT ] BEGIN : FUNCTION: Line Count >> %log%
    echo ============================================================================== >> %log%
    echo. >> %log%
    
    echo %fullstamp% : [ COUNT ] Counting Number Of Lines In '%impFull%' >> %log%

  set /p =COUNT: < nul 
  for /f %%C in ('Find /V /C "" ^< %impPath%') do set COUNT=%%C 

    echo %fullstamp% : [ COUNT ] %impFull% has %COUNT% lines. >> %log%

  if %COUNT% GTR %exp_num_lines% (
    echo. >> !log!
    echo ============================================================================== >> !log!
    echo !fullstamp! : [ COUNT ] END : FUNCTION: Line Count >> !log!
    echo ============================================================================== >> !log!
    echo. >> !log!
    echo .............................................................................. >> !log!
    echo .............................................................................. >> !log!
    
    goto funcSQLImport 
    ) else (

    echo. >> !log!
    echo ============================================================================== >> !log!
    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ >> !log!
    echo !fullstamp! [ BADFILE ] : IMPORT FILE : LINE COUNT >> !log! 
    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ >> !log!
    echo ============================================================================== >> !log!
    echo. >> !log!
    echo !fullstamp! : [ BADFILE ] : Line Count Test - FAILED. >> !log!
    echo !fullstamp! : [ BADFILE ] : '!impFull!' contains !COUNT! lines. >> !log! 
    echo !fullstamp! : [ BADFILE ] : Expecting !exp_num_lines! lines minimum. >> !log!
    echo !fullstamp! : [ BADFILE ] : Archiving to '\ImportEmployees\badarch' >> !log! 
    echo. >> !log!
    )
    
  goto funcBadFile

::=======================================================================================================
::  /funcLineCount
::=======================================================================================================
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


::=======================================================================================================
:funcSQLImport
::=======================================================================================================
    echo. >> %log%
    echo ============================================================================== >> %log%
    echo %fullstamp% : [ IMPORT ] Begin SQL Import Module : '%impFull%' >> %log%
    echo ============================================================================== >> %log%
    echo. >> %log%

    echo %fullstamp% : [ IMPORT ] Starting SQL Import >> %log%
    


  %GEM%\runscript script=Import_v1_70.gsf,pw=gemie,svr=%sqlname%,core=1,module=%module%,include=gsf.txt

    echo %fullstamp% : [ IMPORT ] SQL Import successful. >> %log%
    echo.>> %log%


    echo ============================================================================== >> %log%
    echo %fullstamp% : [ IMPORT ] Exiting SQL Import Module >> %log%
    echo ============================================================================== >> %log%
    echo. >> %log%
    echo .............................................................................. >> %log%
    echo .............................................................................. >> %log%  
    echo. >> %log%
  goto funcArchive

::=======================================================================================================
::  /funcSQLImport 
::=======================================================================================================
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


::=======================================================================================================
:funcArchive
::=======================================================================================================
    echo ============================================================================== >> %log%
    echo %fullstamp% : [ ARCHIVE ] Begin Archive File Rotations >> %log%
    echo ============================================================================== >> %log%
    echo. >> %log%


  if exist %gemp%.d08 del /Q %gemp%.d08
  if exist %gemp%*.d07 copy %gemp%*.d07 %gemp%*.d08
  if exist %gemp%*.d06 copy %gemp%*.d06 %gemp%*.d07
  if exist %gemp%*.d05 copy %gemp%*.d05 %gemp%*.d06
  if exist %gemp%*.d04 copy %gemp%*.d04 %gemp%*.d05
  if exist %gemp%*.d03 copy %gemp%*.d03 %gemp%*.d04
  if exist %gemp%*.d02 copy %gemp%*.d02 %gemp%*.d03
  if exist %gemp%*.d01 copy %gemp%*.d01 %gemp%*.d02


    echo %fullstamp% : [ ARCHIVE ] Archived Files Rotated Successfully >> %log%


  move %impPath% %archPath%.d01

    echo %fullstamp% : [ ARCHIVE ] '%impFull%' -- '%archFull%' >> %log%
    echo. >> %log%

    echo ============================================================================== >> %log%
    echo %fullstamp% : [ ARCHIVE ] : Employee File Archive Complete >> %log% 
    echo ============================================================================== >> %log%  
    echo. >> %log%
    echo .............................................................................. >> %log%
    echo .............................................................................. >> %log%
    echo. >> %log%
  goto Done

::=======================================================================================================
::  /funcArchive
::=======================================================================================================
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


::=======================================================================================================
:funcBadFile
::=======================================================================================================

::-------------------------------------------------------------------------------------------------------
::  ERROR MSG : BAD LOG FILE 
::-------------------------------------------------------------------------------------------------------

    echo ============================================================================== >> %badlog%
    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ >> %badlog%
    echo %fullstamp% : ERROR : IMPORT FILE : LINE COUNT >> %badlog%
    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ >> %badlog%
    echo ============================================================================== >> %badlog%
    echo. >> %badlog%
    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ >> %badlog%
    echo %fullstamp% : [ BADFILE ] : Line Count Test - FAILED. >> %badlog%
    echo %fullstamp% : [ BADFILE ] : '%impFull%' contains %COUNT% lines. >> %badlog% 
    echo %fullstamp% : [ BADFILE ] : Expecting %exp_num_lines% lines minimum. >> %badlog%
    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ >> %badlog%
    echo. >> %badlog%


::------------------------------------------------------------------------------------------------------- 

    echo ------------------------------------------------------------------------------ >> %log%
    echo %fullstamp% : [ BADFILE ] Begin Archived Corrupt File Rotations >> %log%
    echo ------------------------------------------------------------------------------ >> %log%
    echo. >> %log%

    ::-----------------------------------------------------------------------------------------------

    echo ------------------------------------------------------------------------------ >> %badlog%
    echo %fullstamp% : [ BADFILE ] Begin Archived Corrupt File Rotations >> %badlog%
    echo ------------------------------------------------------------------------------ >> %badlog%
    echo. >> %badlog%

::-------------------------------------------------------------------------------------------------------

  if exist %badPath%*.d08 del /Q %badPath%*.d08
  if exist %badPath%*.d07 copy %badPath%*.d07 %badPath%*.d08
  if exist %badPath%*.d06 copy %badPath%*.d06 %badPath%*.d07
  if exist %badPath%*.d05 copy %badPath%*.d05 %badPath%*.d06
  if exist %badPath%*.d04 copy %badPath%*.d04 %badPath%*.d05
  if exist %badPath%*.d03 copy %badPath%*.d03 %badPath%*.d04
  if exist %badPath%*.d02 copy %badPath%*.d02 %badPath%*.d03
  if exist %badPath%*.d01 copy %badPath%*.d01 %badPath%*.d02

::-------------------------------------------------------------------------------------------------------

    echo %fullstamp% : [ BADFILE ] Archived corrupt files rotation successful. >> %log%

    ::-----------------------------------------------------------------------------------------------

    echo %fullstamp% : [ BADFILE ] Archived corrupt files rotation successful. >> %badlog%

::-------------------------------------------------------------------------------------------------------

  move %impPath% %badPath%.d01    

::-------------------------------------------------------------------------------------------------------


    echo %fullstamp% : [ BADFILE ] Archived corrupt %impFull%. >> %log%
    echo. >> %log%
    echo ------------------------------------------------------------------------------ >> %badlog%

    ::-----------------------------------------------------------------------------------------------

    echo %fullstamp% : [ BADFILE ] Archived corrupt %impFull%. >> %badlog%
    echo. >> %badlog%
    echo ------------------------------------------------------------------------------ >> %badlog%
    echo. >> %badlog%

::-------------------------------------------------------------------------------------------------------

    echo ============================================================================== >> %log%
    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ >> %log%
    echo %fullstamp% : [ BADFILE ] Exiting Bad File Processes  >> %log% 
    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ >> %log%
    echo ============================================================================== >> %log%  
    echo. >> %log%
    echo .............................................................................. >> %log%
    echo .............................................................................. >> %log%
    echo. >> %log%


::-------------------------------------------------------------------------------------------------------

    echo ============================================================================== >> %badlog%
    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ >> %badlog%
    echo %fullstamp% : [ BADFILE ] Exiting Bad File Processes >> %badlog% 
    echo ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ >> %badlog%
    echo ============================================================================== >> %badlog%  
    echo. >> %badlog%
    echo .............................................................................. >> %badlog%
    echo .............................................................................. >> %badlog%
    echo. >> %badlog%
    
  goto Done

::=======================================================================================================
::  /funcBadFile
::=======================================================================================================
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


::=======================================================================================================
:Done
::=======================================================================================================
    echo ============================================================================== >> %log%
    echo %fullstamp% : [ END ] Exiting Master Employee Import Job >> %log%
    echo ============================================================================== >> %log%
    echo. >> %log%
    echo. >> %log%
    echo ****************************************************************************** >> %log%
    echo ****************************************************************************** >> %log%
    echo ****************************************************************************** >> %log%
    echo. >> %log%
    echo. >> %log%

::=======================================================================================================
::  /Done
::=======================================================================================================
::+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	


::=======================================================================================================
::  /BEGIN BATCH TASKS
::=======================================================================================================

